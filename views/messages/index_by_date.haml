- if !xhr
  %h1#title= page_title
  /#subtitle Events from Sacred Circle Mailing List
  /#subtitle Portland Ecstatic Dance Community Events
  #subtitle Events in the Portland Ecstatic Dance Community
  - content_for(:description) { 'What\'s going on today in the Portland, Oregon Ecstatic Dance Community? Daily Dancer pulls events from two sources: from the Sacred Circle mailing list and from the dance calendar at pdxecstaticdtance.com. All events are grouped by date of occurrence.' }
  - content_for(:title) { 'PDX Daily Dancer' }
- odd = true
- first_time = true
- date_strings = date_range_with_messages.keys
- date_strings.each do |date_string|
  - messages = date_range_with_messages[date_string]
  - events = date_range_with_events[date_string]
  - faisbook_events = date_range_with_faisbook_events[date_string]
  - odd = !odd
  - date_holder_class = odd ? 'odd' : 'even'
  - date_holder_class += ' additional' if xhr
  - display_date_class = (messages | events).empty? ? 'empty' : 'full'

  .date-holder{class: date_holder_class}
    - if first_time
      = haml :_nav, locals: locals unless xhr
      - first_time = false
    %h2.date{class: display_date_class}= display_date(date_string)

    - events.each do |event|
      .message-or-event{id: "event-#{event.id}"}
        .event-marker
        %h3.subject= event.name_formatted
        .details.hidden
          .source (Recurring Event from pdxecstaticdance.com)
          .website
            .label Website:
            %a{href: event.url_formatted, target: '_blank'}= event.name_formatted
          .time
            .label When:
            = event.time_formatted
          .hostess
            .label Host:
            = event.hostess
          .location
            .label Location:
            .venue-and-address
              .venue= event.location_formatted
              .address
                %a{href: event.location_url_formatted, target: '_blank'}= event.address

    - faisbook_events.each do |faisbook_event|
      .message-or-event{id: "faisbook-event-#{faisbook_event.id}"}
        .event-marker
        %h3.subject= faisbook_event.name
        .details.hidden
          .source= "#{FaisbookEvent::ACTUAL_NAME} Event"
          .website
            .label Website:
            %a{href: faisbook_event.link, target: '_blank'}= faisbook_event.name
          .time
            .label When:
            = faisbook_event.start_time
          .hostess
            .label Host:
            unknown
          .description= faisbook_event.description
          .location
            .label Location:
            .venue-and-address
              .venue= faisbook_event.location
              .address
                %a{href: faisbook_event.address_link, target: '_blank'}= faisbook_event.address

    - messages.each do |message|
      - klass = message.marked_as_duplicate? ? 'duplicate' : ''
      .message-or-event{id: "message-#{message.id}", class: klass}
        %h3.subject= message.subject_filtered
        .details.hidden
          .source= "(Posted by #{CGI.escapeHTML(message.author_multiple_source)} on #{message.received_at.strftime('%b %e')})"
          - message_details_as_array(message).each do |line|
            .line= line


%center
  / Note the text for this button comes from a css :before selector
  / Which makes it so the JavaScript only has to change the class
  %button.toggle-additional-dates{class: xhr ? '' : 'show'}
#more.hidden
